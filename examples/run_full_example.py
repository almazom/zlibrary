#!/usr/bin/env python3
"""
üöÄ –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä: –ü–æ–∏—Å–∫ ‚Üí –ó–∞–≥—Ä—É–∑–∫–∞ ‚Üí –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ EPUB
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–µ—Å—å workflow —Ä–∞–±–æ—Ç—ã —Å Z-Library API
"""

import subprocess
import sys
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏  
PROJECT_ROOT = Path(__file__).parent.parent  # examples -> project root
PYTHON_DIR = Path(__file__).parent / "python"  # examples/python
DOWNLOAD_DIR = Path(__file__).parent / "downloads" / "full_example"

def run_python_script(script_name, args=None):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å Python —Å–∫—Ä–∏–ø—Ç –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    script_path = PYTHON_DIR / script_name
    
    if not script_path.exists():
        print(f"‚ùå –°–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {script_path}")
        return None
    
    cmd = [sys.executable, str(script_path)]
    if args:
        cmd.extend(args)
    
    try:
        result = subprocess.run(
            cmd, 
            capture_output=True, 
            text=True, 
            cwd=PROJECT_ROOT
        )
        
        return {
            'returncode': result.returncode,
            'stdout': result.stdout,
            'stderr': result.stderr
        }
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {script_name}: {e}")
        return None

def find_downloaded_files(directory):
    """–ù–∞–π—Ç–∏ –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ EPUB —Ñ–∞–π–ª—ã"""
    epub_files = []
    
    if not Path(directory).exists():
        return epub_files
    
    for file_path in Path(directory).rglob("*.epub"):
        epub_files.append(file_path)
    
    return epub_files

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø–æ–ª–Ω—ã–π workflow"""
    print("üöÄ Z-Library Full Workflow Example")
    print("=" * 50)
    print("–≠—Ç–∞–ø—ã:")
    print("1Ô∏è‚É£ –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥–∏ —á–µ—Ä–µ–∑ JSON API")
    print("2Ô∏è‚É£ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ EPUB")
    print("3Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç")
    print()
    
    # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
    DOWNLOAD_DIR.mkdir(parents=True, exist_ok=True)
    
    # –≠—Ç–∞–ø 1: –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞
    print("üîç –≠–¢–ê–ü 1: –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥–∏")
    print("-" * 30)
    
    search_result = run_python_script("search_and_download.py")
    
    if not search_result:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫—É")
        return 1
    
    if search_result['returncode'] != 0:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞/–∑–∞–≥—Ä—É–∑–∫–∏:")
        print(search_result['stderr'] or search_result['stdout'])
        return 1
    
    print("‚úÖ –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
    
    # –ù–∞–π—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    downloaded_files = find_downloaded_files(DOWNLOAD_DIR.parent)
    
    if not downloaded_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ EPUB —Ñ–∞–π–ª—ã")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:", DOWNLOAD_DIR.parent)
        return 1
    
    # –í—ã–±—Ä–∞—Ç—å —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª
    latest_file = max(downloaded_files, key=lambda f: f.stat().st_mtime)
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω EPUB —Ñ–∞–π–ª: {latest_file.name}")
    print(f"üíæ –†–∞–∑–º–µ—Ä: {latest_file.stat().st_size:,} –±–∞–π—Ç")
    print()
    
    # –≠—Ç–∞–ø 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ EPUB
    print("üìñ –≠–¢–ê–ü 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ EPUB —Ñ–∞–π–ª–∞")
    print("-" * 30)
    
    diagnostic_result = run_python_script("epub_diagnostics.py", [str(latest_file)])
    
    if not diagnostic_result:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É")
        return 1
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    print(diagnostic_result['stdout'])
    
    if diagnostic_result['stderr']:
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:")
        print(diagnostic_result['stderr'])
    
    # –≠—Ç–∞–ø 3: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\nüéØ –≠–¢–ê–ü 3: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç")
    print("-" * 30)
    
    # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–¥–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    diagnostic_code = diagnostic_result['returncode']
    
    if diagnostic_code == 0:
        quality_status = "üü¢ –í–´–°–û–ö–û–ï –ö–ê–ß–ï–°–¢–í–û"
        recommendation = "‚úÖ –§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    elif diagnostic_code == 1:
        quality_status = "üü° –°–†–ï–î–ù–ï–ï –ö–ê–ß–ï–°–¢–í–û"
        recommendation = "‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏"
    else:
        quality_status = "üî¥ –ù–ò–ó–ö–û–ï –ö–ê–ß–ï–°–¢–í–û"
        recommendation = "‚ùå –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é"
    
    print(f"üìä –ö–∞—á–µ—Å—Ç–≤–æ EPUB: {quality_status}")
    print(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {recommendation}")
    print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚Ä¢ –§–∞–π–ª: {latest_file.name}")
    print(f"   ‚Ä¢ –ü—É—Ç—å: {latest_file}")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä: {latest_file.stat().st_size / 1024 / 1024:.1f} MB")
    print(f"   ‚Ä¢ –ö–æ–¥ –∫–∞—á–µ—Å—Ç–≤–∞: {diagnostic_code}")
    print()
    
    # –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    print("üîß –î–ê–õ–¨–ù–ï–ô–®–ò–ï –î–ï–ô–°–¢–í–ò–Ø:")
    
    if diagnostic_code == 0:
        print("   ‚úÖ –§–∞–π–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–π —á–∏—Ç–∞–ª–∫–µ")
        print("   üì± –°–æ–≤–º–µ—Å—Ç–∏–º —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
        print("   üéâ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —á—Ç–µ–Ω–∏–µ–º!")
    elif diagnostic_code == 1:
        print("   üìñ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —á–∏—Ç–∞–ª–∫–∞—Ö")
        print("   üîç –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö - –ø–æ–∏—â–∏—Ç–µ –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é")
        print("   ‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è")
    else:
        print("   üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
        print("   üìö –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç (PDF –≤–º–µ—Å—Ç–æ EPUB)")
        print("   üåç –ü–æ–∏—â–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö")
    
    print()
    print("="*50)
    print("‚ú® Workflow –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    return diagnostic_code

if __name__ == "__main__":
    try:
        exit_code = main()
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)