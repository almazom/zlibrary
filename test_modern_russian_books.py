#!/usr/bin/env python3
"""
MODERN/LESS OBVIOUS RUSSIAN BOOKS - Fuzzy Input Testing
Testing contemporary and less classical Russian titles
"""
import asyncio
import sys
sys.path.insert(0, '.')
from book_normalization_system import UnifiedBookNormalizer

# Modern/Less obvious Russian books with fuzzy versions
MODERN_RUSSIAN_FUZZY = [
    # –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ (Contemporary Literature)
    ("–º–µ—Ç—Ä–æ 2033 –≥–ª—É—Ö–æ–≤—Å–∫–∏", "–º–µ—Ç—Ä–æ 2033 –≥–ª—É—Ö–æ–≤—Å–∫–∏–π"),  # Metro 2033 by Glukhovsky
    ("–º–µ—Ç—Ä–æ2033", "–º–µ—Ç—Ä–æ 2033"),  # Missing space
    ("–º–∏—Ç—Ä–æ 2033", "–º–µ—Ç—Ä–æ 2033"),  # Typo
    
    # –ü–µ–ª–µ–≤–∏–Ω - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ä
    ("–ø–µ–ª–µ–≤–∏–Ω —á–∞–ø–∞–µ–≤ –∏ –ø—É—Å—Ç–∞—Ç–∞", "—á–∞–ø–∞–µ–≤ –∏ –ø—É—Å—Ç–æ—Ç–∞ –ø–µ–ª–µ–≤–∏–Ω"),  # Typo in "–ø—É—Å—Ç–æ—Ç–∞"
    ("generation –ø –ø–µ–ª–µ–≤–∏–Ω", "generation –ø –ø–µ–ª–µ–≤–∏–Ω"),  # Mixed Latin/Cyrillic
    ("–∞–º–ø–∏—Ä –≤", "empire v"),  # Phonetic Russian of "Empire V"
    
    # –ê–∫—É–Ω–∏–Ω - –¥–µ—Ç–µ–∫—Ç–∏–≤—ã
    ("–∞–∑–∞–∑–µ–ª –∞–∫—É–Ω–∏–Ω", "–∞–∑–∞–∑–µ–ª—å –∞–∫—É–Ω–∏–Ω"),  # Missing soft sign
    ("—Ç—É—Ä–µ—Ü–∫–∏–π –≥–∞–º–±–µ—Ç", "—Ç—É—Ä–µ—Ü–∫–∏–π –≥–∞–º–±–∏—Ç"),  # Typo
    ("—Å—Ç–∞—Ç—Å–∫–∏ —Å–æ–≤–µ—Ç–Ω–∏–∫", "—Å—Ç–∞—Ç—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫"),  # Missing letter
    
    # –£–ª–∏—Ü–∫–∞—è - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–∑–∞
    ("–∑–µ–ª—ë–Ω—ã–π —à–∞—Ç–µ—Ä —É–ª–∏—Ü–∫–∞—è", "–∑–µ–ª—ë–Ω—ã–π —à–∞—Ç—ë—Ä —É–ª–∏—Ü–∫–∞—è"),  # Common typo
    ("–∫–∞–∑—É—Å –∫—É–∫–æ—Ü–∫–æ–≥–æ", "–∫–∞–∑—É—Å –∫—É–∫–æ—Ü–∫–æ–≥–æ"),
    ("–º–µ–¥–µ—è –∏ –µ—ë –¥–µ—Ç–∏", "–º–µ–¥–µ—è –∏ –µ–µ –¥–µ—Ç–∏"),  # —ë vs –µ
    
    # –ü—Ä–∏–ª–µ–ø–∏–Ω - –Ω–æ–≤–µ–π—à–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
    ("—Å–∞–Ω–∫—å—è –ø—Ä–∏–ª–µ–ø–∏–Ω", "—Å–∞–Ω—å–∫—è –ø—Ä–∏–ª–µ–ø–∏–Ω"),  # Typo
    ("–æ–±–∏—Ç–µ–ª –ø—Ä–∏–ª–µ–ø–∏–Ω", "–æ–±–∏—Ç–µ–ª—å –ø—Ä–∏–ª–µ–ø–∏–Ω"),  # Missing soft sign
    ("—á—ë—Ä–Ω–∞—è –æ–±–µ–∑—è–Ω–∞", "—á—ë—Ä–Ω–∞—è –æ–±–µ–∑—å—è–Ω–∞"),  # Missing soft sign
    
    # –ë–∏–∑–Ω–µ—Å –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    ("—Ç–æ–Ω–∫–æ–µ –∏—Å–∫—É—Å—Ç–≤–æ –ø–æ—Ñ–∏–≥–∏–∑–º–∞", "—Ç–æ–Ω–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –ø–æ—Ñ–∏–≥–∏–∑–º–∞"),  # Typo
    ("7 –Ω–∞–≤—ã–∫–æ–≤ –≤—ã—Å–æ–∫–æ—ç—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π", "7 –Ω–∞–≤—ã–∫–æ–≤ –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π"),  # Missing letter
    ("–ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –º–æ–∂–µ—Ç –≤—Å—ë", "–ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –º–æ–∂–µ—Ç –≤—Å–µ"),  # —ë vs –µ
    
    # IT –∫–Ω–∏–≥–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    ("–≥—Ä–æ–∫–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã", "–≥—Ä–æ–∫–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã"),
    ("—á–∏—Å—Ç—ã–π –∫–æ–¥ –º–∞—Ä—Ç–∏–Ω", "—á–∏—Å—Ç—ã–π –∫–æ–¥ —Ä–æ–±–µ—Ä—Ç –º–∞—Ä—Ç–∏–Ω"),
    ("—Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∫–æ–¥ –º–∞–∫–∫–æ–Ω–µ–ª", "—Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∫–æ–¥ –º–∞–∫–∫–æ–Ω–Ω–µ–ª–ª"),  # Typo in author
    
    # –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è
    ("–∏–≥—Ä—ã –≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞—é—Ç –ª—é–¥–∏", "–∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞—é—Ç –ª—é–¥–∏"),  # Missing comma
    ("–∫—Ä–∞—Å–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞", "–∫—Ä–∞—Å–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞"),
    ("–Ω–ª–ø –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", "–Ω–ª–ø: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"),  # Missing colon
    
    # –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –∏ —Ñ—ç–Ω—Ç–µ–∑–∏
    ("–≤–µ–¥–º–∞–∫ —Å–∞–ø–∫–æ–≤—Å–∫–∏–π", "–≤–µ–¥—å–º–∞–∫ —Å–∞–ø–∫–æ–≤—Å–∫–∏–π"),  # Common typo
    ("–¥–æ–∑–æ—Ä—ã –ª—É–∫—è–Ω–µ–Ω–∫–æ", "–¥–æ–∑–æ—Ä—ã –ª—É–∫—å—è–Ω–µ–Ω–∫–æ"),  # Typo in author
    ("–ª–∞–±–∏—Ä–∏–Ω—Ç –æ—Ç—Ä–∞–∂–µ–Ω–∏–π", "–ª–∞–±–∏—Ä–∏–Ω—Ç –æ—Ç—Ä–∞–∂–µ–Ω–∏–π"),
    
    # –°–æ–∫—Ä–∞—â–µ–Ω–∏—è –∏ —Å–ª–µ–Ω–≥
    ("–≥–ø", "–≥–∞—Ä—Ä–∏ –ø–æ—Ç—Ç–µ—Ä"),  # Harry Potter in Russian
    ("–≤–∫", "–≤–æ–π–Ω–∞ –∏ –º–∏—Ä"),  # Unlikely but possible
    ("–∑—Å", "–∑–µ–ª—ë–Ω—ã–π —à–∞—Ç—ë—Ä"),  # Abbreviation
    
    # –¢—Ä–∞–Ω—Å–ª–∏—Ç (Translit)
    ("metro 2033", "–º–µ—Ç—Ä–æ 2033"),
    ("vedmak", "–≤–µ–¥—å–º–∞–∫"),
    ("master i margarita", "–º–∞—Å—Ç–µ—Ä –∏ –º–∞—Ä–≥–∞—Ä–∏—Ç–∞"),
    
    # –û–ø–µ—á–∞—Ç–∫–∏ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
    ("python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö", "–ø–∏—Ç–æ–Ω –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"),  # Mixed languages
    ("java script –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", "javascript –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"),
    ("c++ –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤", "—Å++ –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤"),  # Latin C vs Cyrillic –°
]

async def test_modern_russian(fuzzy_text):
    """Test modern Russian fuzzy input"""
    normalizer = UnifiedBookNormalizer()
    
    print(f"\n{'='*60}")
    print(f"üìö MODERN RUSSIAN BOOK: '{fuzzy_text}'")
    print('='*60)
    
    # Process it
    result = await normalizer.normalize_book_query(fuzzy_text)
    
    # Extract results
    normalized = result['final_result']['result']
    confidence = result['final_result']['confidence']
    method = result['final_result']['method']
    detected_type = result.get('detected_type', 'unknown')
    
    print(f"\nüîç ANALYSIS:")
    print(f"  ‚Ä¢ Problem type: {detected_type}")
    print(f"  ‚Ä¢ Confidence: {confidence:.0%}")
    print(f"  ‚Ä¢ Method: {method}")
    
    print(f"\n‚ú® RESULT:")
    print(f"  Input:  '{fuzzy_text}'")
    print(f"  Output: '{normalized}'")
    
    if normalized.lower() != fuzzy_text.lower():
        print(f"\n‚úÖ Normalized!")
    else:
        print(f"\nüìå No change applied")
    
    return normalized

# Real examples from Z-Library (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏)
REAL_ZLIBRARY_RUSSIAN = [
    # Actual popular searches
    "–º–µ—Ç—Ä–æ 2033",
    "–≤–µ–¥—å–º–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∂–µ–ª–∞–Ω–∏–µ",
    "python –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ",  # With typo
    "1—Å –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ",      # With typo
    "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å –Ω—É–ª—è",
    "–±–ª–æ–∫—á–µ–π–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    "–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
    "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∞–∫—Ü–∏–∏",
    "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è –≤–ª–∏—è–Ω–∏—è —á–∞–ª–¥–∏–Ω–∏",
    "sapiens –∫—Ä–∞—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞",
    
    # Technical books in Russian
    "–¥–∂–∞–Ω–≥–æ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
    "—Ä–µ–∞–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
    "–≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
    "kubernetes –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ",
    "–¥–æ–∫–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
    
    # Business books
    "–æ—Ç –Ω—É–ª—è –∫ –µ–¥–∏–Ω–∏—Ü–µ",
    "–±–µ—Ä–µ–∂–ª–∏–≤—ã–π —Å—Ç–∞—Ä—Ç–∞–ø",
    "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≥–æ–ª—É–±–æ–≥–æ –æ–∫–µ–∞–Ω–∞",
    "7 –Ω–∞–≤—ã–∫–æ–≤",
    
    # Modern fiction
    "—Ü–≤–µ—Ç—ã –¥–ª—è —ç–ª–¥–∂–µ—Ä–Ω–æ–Ω–∞",
    "–º–∞—Ä—Å–∏–∞–Ω–∏–Ω",
    "–¥—é–Ω–∞",
    "–±–ª–∞–≥–∏–µ –∑–Ω–∞–º–µ–Ω–∏—è",
]

if __name__ == "__main__":
    print("\nüöÄ MODERN RUSSIAN BOOKS - FUZZY TEST")
    print("="*60)
    
    # Examples with typos/fuzzy input
    test_examples = [
        "–º–µ—Ç—Ä–æ2033 –≥–ª—É—Ö–æ–≤—Å–∫–∏",      # Metro 2033 - missing space, typo in author
        "–≤–µ–¥–º–∞–∫ —Å–∞–ø–∫–æ–≤—Å–∫–∏–π",        # Witcher - common typo (–º instead of —å)
        "–ø–∏—Ç–æ–Ω –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏–µ",    # Python programming - typo
        "–¥–æ–∫–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",  # Docker for developers
        "generation –ø –ø–µ–ª–µ–≤–∏–Ω",     # Mixed Latin/Cyrillic
        "—Å–∞–Ω–∫—å—è –ø—Ä–∏–ª–µ–ø–∏–Ω",         # Modern Russian lit with typo
        "—á–∏—Å—Ç—ã–π –∫–æ–¥ –º–∞—Ä—Ç–∏–Ω",       # Clean Code
        "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",       # Machine Learning
    ]
    
    print("\nüìö Testing modern/non-classical Russian books:\n")
    
    # Test one specific
    TEST_INPUT = "–≤–µ–¥–º–∞–∫ 3 –¥–∏–∫–∞—è –∞—Ö–æ—Ç–∞"  # <-- With typo in "–æ—Ö–æ—Ç–∞"
    
    print(f"Testing: '{TEST_INPUT}'")
    asyncio.run(test_modern_russian(TEST_INPUT))
    
    print("\n" + "="*60)
    print("\nüìù More modern Russian books to test (with typos):")
    for i, example in enumerate(test_examples, 1):
        print(f"  {i}. '{example}'")
    
    print("\nüí° These are actual books available in Z-Library!")
    print("   Change TEST_INPUT to try different ones.")