#!/bin/bash

# CLAUDE SDK BOOK NORMALIZER - Bash wrapper
# Uses claude command directly with proper prompt

normalize_book() {
    local input="$1"
    
    echo "üîç Normalizing: '$input'"
    echo "----------------------------------------"
    
    # Use claude command with JSON output format
    claude -p "You are a book title normalization expert. Fix this book query and return ONLY valid JSON:

Input: \"$input\"

Fix these issues if present:
- Spelling errors and typos
- Missing soft signs (—å) in Russian (e.g., –≤–µ–¥–º–∞–∫ ‚Üí –≤–µ–¥—å–º–∞–∫)  
- Complete partial titles
- Separate title from author
- Add proper punctuation

For '–≤–µ–¥–º–∞–∫ 3 –¥–∏–∫–∞—è –æ—Ö–æ—Ç–∞':
- Fix to '–í–µ–¥—å–º–∞–∫ 3: –î–∏–∫–∞—è –û—Ö–æ—Ç–∞'
- Recognize as The Witcher 3: Wild Hunt

Return ONLY this JSON (no other text):
{
  \"original\": \"$input\",
  \"normalized\": \"corrected version\",
  \"confidence\": 0.95,
  \"language\": \"ru/en/mixed\",
  \"problems_found\": [\"typo\", \"missing_soft_sign\"],
  \"title\": \"book title\",
  \"author\": \"author if present\",
  \"series\": \"series if applicable\",
  \"explanation\": \"what was fixed\"
}" --json
}

# Test specific book
if [ $# -eq 0 ]; then
    echo "üìö CLAUDE SDK BOOK NORMALIZER TEST"
    echo "===================================="
    echo
    
    # Test cases
    echo "Test 1: Russian with typo"
    normalize_book "–≤–µ–¥–º–∞–∫ 3 –¥–∏–∫–∞—è –æ—Ö–æ—Ç–∞"
    echo
    
    echo "Test 2: English with typo"
    normalize_book "hary poter and the filosfer stone"
    echo
    
    echo "Test 3: Mixed/Modern"
    normalize_book "–º–µ—Ç—Ä–æ2033 –≥–ª—É—Ö–æ–≤—Å–∫–∏"
    
else
    # Normalize provided input
    normalize_book "$*"
fi