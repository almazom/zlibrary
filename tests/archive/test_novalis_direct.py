#!/usr/bin/env python3
"""
Test direct Novalis search to show higher confidence
"""

import asyncio
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent))

from url_to_epub_with_confidence import URLtoEPUBWithConfidence

async def test_direct_novalis():
    processor = URLtoEPUBWithConfidence()
    
    # Create mock extraction for direct Novalis search
    extracted_info = {
        "title_keywords": ["–≥–µ–Ω—Ä–∏—Ö", "—Ñ–æ–Ω", "–æ—Ñ—Ç–µ—Ä–¥–∏–Ω–≥–µ–Ω"],
        "author_keywords": ["–Ω–æ–≤–∞–ª–∏—Å"],
        "search_query": "–Ω–æ–≤–∞–ª–∏—Å",
        "expected_title": "–ì–µ–Ω—Ä–∏—Ö —Ñ–æ–Ω –û—Ñ—Ç–µ—Ä–¥–∏–Ω–≥–µ–Ω",
        "expected_author": "–ù–æ–≤–∞–ª–∏—Å",
        "book_type": "—Ä–æ–º–∞–Ω",
        "language": "russian"
    }
    
    print("üîç Testing confidence calculation with direct Novalis search...")
    
    # Mock search result (from our earlier search)
    mock_search_result = {
        "name": "–ì–µ–Ω—Ä–∏—Ö —Ñ–æ–Ω –û—Ñ—Ç–µ—Ä–¥–∏–Ω–≥–µ–Ω",
        "authors": [
            {"author": "–ù–æ–≤–∞–ª–∏—Å"},
            {"author": "0 comments"},
            {"author": "Litres"}
        ],
        "year": "2019",
        "extension": "EPUB",
        "size": "500 KB",
        "description": "–†–æ–º–∞–Ω –Ω–µ–º–µ—Ü–∫–æ–≥–æ –ø–æ—ç—Ç–∞-—Ä–æ–º–∞–Ω—Ç–∏–∫–∞ –ù–æ–≤–∞–ª–∏—Å–∞..."
    }
    
    confidence = processor.calculate_confidence(extracted_info, mock_search_result)
    
    print("\nüéØ CONFIDENCE CALCULATION RESULT:")
    print("=" * 50)
    print(f"Score: {confidence['score']} ({confidence['percentage']})")
    print(f"Level: {confidence['level']}")
    print(f"Description: {confidence['description']}")
    print("\nüìù Confidence Breakdown:")
    for reason in confidence['reasons']:
        print(f"   ‚Ä¢ {reason}")
    
    return confidence

if __name__ == "__main__":
    asyncio.run(test_direct_novalis())